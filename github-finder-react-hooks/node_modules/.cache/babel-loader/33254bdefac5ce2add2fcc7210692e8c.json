{"ast":null,"code":"var _jsxFileName = \"/home/rahulvig/Desktop/React Udemy/github-finder/src/components/users/User.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport Repos from \"../repos/Repos\";\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login); //allows you to access the username of the user whose page you are trying to visit\n\n    this.props.getUserRepos(this.props.match.params.login);\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          name = _this$props$user.name,\n          avatar_url = _this$props$user.avatar_url,\n          location = _this$props$user.location,\n          company = _this$props$user.company,\n          bio = _this$props$user.bio,\n          blog = _this$props$user.blog,\n          login = _this$props$user.login,\n          html_url = _this$props$user.html_url,\n          followers = _this$props$user.followers,\n          following = _this$props$user.following,\n          public_repos = _this$props$user.public_repos,\n          public_gists = _this$props$user.public_gists,\n          hirable = _this$props$user.hirable;\n    const loading = this.props.loading; // console.log(this.props.user);\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-ligh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" \", \"Back to Search\", \" \"), \"Hirable:\", \" \", hirable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      className: \"round-img\",\n      alt: \"\",\n      style: {\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"About\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, bio)), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, login && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Github Username: \"), \" \", login)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, company && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, blog && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Website: \"), \" \", React.createElement(\"a\", {\n      target: \"_blank\",\n      href: blog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, blog), \" \"))))), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Followers: \", followers), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Following: \", following), React.createElement(\"div\", {\n      className: \"badge badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Public Gists: \", public_gists)), React.createElement(Repos, {\n      repos: Repos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/home/rahulvig/Desktop/React Udemy/github-finder/src/components/users/User.js"],"names":["React","Component","Fragment","PropTypes","Spinner","Link","Repos","User","componentDidMount","props","getUser","match","params","login","getUserRepos","render","user","name","avatar_url","location","company","bio","blog","html_url","followers","following","public_repos","public_gists","hirable","loading","width","propTypes","bool","object","isRequired","func","repos","array"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport Repos from \"../repos/Repos\";\n\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login); //allows you to access the username of the user whose page you are trying to visit\n    this.props.getUserRepos(this.props.match.params.login);\n  }\n\n  static propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired\n  };\n\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      company,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hirable\n    } = this.props.user;\n\n    const { loading } = this.props;\n\n    // console.log(this.props.user);\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    return (\n      <Fragment>\n        <Link to=\"/\" className=\"btn btn-ligh\">\n          {\" \"}\n          Back to Search{\" \"}\n        </Link>\n        Hirable:{\" \"}\n        {hirable ? (\n          <i className=\"fas fa-check text-success\" />\n        ) : (\n          <i className=\"fas fa-times-circle text-danger\" />\n        )}\n        <div className=\"card grid-2\">\n          <div className=\"all-center\">\n            <img\n              src={avatar_url}\n              className=\"round-img\"\n              alt=\"\"\n              style={{ width: \"150px\" }}\n            />\n            <h1>{name}</h1>\n            <p>{location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>About</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Github Username: </strong> {login}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong> {company}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong>{\" \"}\n                    <a target=\"_blank\" href={blog}>\n                      {blog}\n                    </a>{\" \"}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"card text-center\">\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\n          <div className=\"badge badge-success\">Following: {following}</div>\n          <div className=\"badge badge-dark\">Public Repos: {public_repos}</div>\n          <div className=\"badge badge-light\">Public Gists: {public_gists}</div>\n        </div>\n        <Repos repos={Repos} />\n      </Fragment>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}