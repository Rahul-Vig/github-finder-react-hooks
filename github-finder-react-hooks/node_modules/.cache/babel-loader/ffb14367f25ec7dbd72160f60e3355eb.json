{"ast":null,"code":"var _jsxFileName = \"/home/rahulvig/Desktop/React Udemy/github-finder/src/App.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\"; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1> Hello from React </h1>\n//     </div>\n//   );\n// }\n//You can put any js expression in the {} when rendering html elements. {name} is one example,\n//can also do {1+1} and it will evaluate on the actual webpage as 2.\n//other examples: {name.toUpperCase()}\n//Can use expressions in JSX and pass functions, variables etc.\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      //loading needed while data is being loaded.\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      console.log(res.data);\n      this.setState({\n        users: res.data.items,\n        loading: false,\n        alert: null\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users?\".concat(username, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      console.log(res.data);\n      this.setState({\n        users: res.data.items,\n        loading: false,\n        alert: null\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n    };\n  }\n\n  render() {\n    // const name = \"John Doe\";\n    // const loading = false;\n    // const showName = true;\n    // if (loading) {\n    //   return <h4>Loading....</h4>;\n    // }\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" \", React.createElement(Navbar, {\n      title: \"Github Finder\",\n      icon: \"fab fa-github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: this.state.users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: this.state.loading,\n        users: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))); // return (\n    //   <Fragment>\n    //     <h1> Welcome to My App </h1>\n    //     {loading ? (\n    //       <h4>Loading...</h4>\n    //     ) : (\n    //       <h1>\n    //         Hello {showName ? name : null} <br />{\" \"}\n    //         {/*You can also just do showName && name*/}\n    //         {\"There are many \" + this.foo()}\n    //       </h1>\n    //     )}\n    //   </Fragment>\n    // );\n  }\n\n} //render is a lifecycle method, it runs when the component has loaded.\n\n\nexport default App;","map":{"version":3,"sources":["/home/rahulvig/Desktop/React Udemy/github-finder/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","Search","Alert","About","axios","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","clearUsers","getUser","username","setAlert","msg","type","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1> Hello from React </h1>\n//     </div>\n//   );\n// }\n\n//You can put any js expression in the {} when rendering html elements. {name} is one example,\n//can also do {1+1} and it will evaluate on the actual webpage as 2.\n//other examples: {name.toUpperCase()}\n\n//Can use expressions in JSX and pass functions, variables etc.\n\nclass App extends Component {\n  //method part of class to be passed as jsx\n  // foo = () => \"Bars\";\n\n  state = {\n    users: [],\n    loading: false, //loading needed while data is being loaded.\n    alert: null\n  };\n\n  //************ componentDidMount Usage with axios. This dictates what happens when your component launces **************/\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${\n  //       process.env.REACT_APP_GITHUB_CLIENT_ID\n  //     }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n  //   console.log(res.data);\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Github Users\n  searchUsers = async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    console.log(res.data);\n    this.setState({ users: res.data.items, loading: false, alert: null });\n  };\n\n  //Clear users from state\n  clearUsers = () => {\n    this.setState({ users: [], loading: false });\n  };\n\n  //Get single github user\n  getUser = async username => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/users?${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    console.log(res.data);\n    this.setState({ users: res.data.items, loading: false, alert: null });\n  };\n\n  //Set alert upon improper usage\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg: msg, type: type } });\n  };\n\n  render() {\n    // const name = \"John Doe\";\n    // const loading = false;\n    // const showName = true;\n\n    // if (loading) {\n    //   return <h4>Loading....</h4>;\n    // }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          {\" \"}\n          <Navbar title=\"Github Finder\" icon=\"fab fa-github\" />\n          <div className=\"container\">\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchUsers={this.searchUsers}\n                      clearUsers={this.clearUsers}\n                      showClear={this.state.users.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Users\n                      loading={this.state.loading}\n                      users={this.state.users}\n                    />\n                  </Fragment>\n                )}\n              />\n            </Switch>\n            <Route exact path=\"/about\" component={About} />\n          </div>\n          {/*you can pass in values for our properties, as shown here with title */}\n        </div>\n      </Router>\n    );\n\n    // return (\n    //   <Fragment>\n    //     <h1> Welcome to My App </h1>\n    //     {loading ? (\n    //       <h4>Loading...</h4>\n    //     ) : (\n    //       <h1>\n    //         Hello {showName ? name : null} <br />{\" \"}\n    //         {/*You can also just do showName && name*/}\n    //         {\"There are many \" + this.foo()}\n    //       </h1>\n    //     )}\n    //   </Fragment>\n    // );\n  }\n} //render is a lifecycle method, it runs when the component has loaded.\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}